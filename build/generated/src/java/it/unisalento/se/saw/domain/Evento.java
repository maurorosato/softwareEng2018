package it.unisalento.se.saw.domain;
// Generated 13-dic-2018 12.27.28 by Hibernate Tools 5.2.0.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Evento generated by hbm2java
 */
@Entity
@Table(name="evento"
    ,catalog="mydb"
)
public class Evento  implements java.io.Serializable {


     private Integer idevento;
     private Aula aula;
     private Insegnamento insegnamento;
     private Prenotazione prenotazione;
     private String descrizione;
     private Set<AppelloEsame> appelloEsames = new HashSet<AppelloEsame>(0);
     private Set<Lezione> leziones = new HashSet<Lezione>(0);
     private Set<Studente> studentes = new HashSet<Studente>(0);

    public Evento() {
    }

	
    public Evento(Aula aula, Insegnamento insegnamento, Prenotazione prenotazione, String descrizione) {
        this.aula = aula;
        this.insegnamento = insegnamento;
        this.prenotazione = prenotazione;
        this.descrizione = descrizione;
    }
    public Evento(Aula aula, Insegnamento insegnamento, Prenotazione prenotazione, String descrizione, Set<AppelloEsame> appelloEsames, Set<Lezione> leziones, Set<Studente> studentes) {
       this.aula = aula;
       this.insegnamento = insegnamento;
       this.prenotazione = prenotazione;
       this.descrizione = descrizione;
       this.appelloEsames = appelloEsames;
       this.leziones = leziones;
       this.studentes = studentes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idevento", unique=true, nullable=false)
    public Integer getIdevento() {
        return this.idevento;
    }
    
    public void setIdevento(Integer idevento) {
        this.idevento = idevento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="aula_idaula", nullable=false)
    public Aula getAula() {
        return this.aula;
    }
    
    public void setAula(Aula aula) {
        this.aula = aula;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="insegnamento_idinsegnamento", nullable=false)
    public Insegnamento getInsegnamento() {
        return this.insegnamento;
    }
    
    public void setInsegnamento(Insegnamento insegnamento) {
        this.insegnamento = insegnamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="prenotazione_idprenotazione", nullable=false)
    public Prenotazione getPrenotazione() {
        return this.prenotazione;
    }
    
    public void setPrenotazione(Prenotazione prenotazione) {
        this.prenotazione = prenotazione;
    }

    
    @Column(name="descrizione", nullable=false)
    public String getDescrizione() {
        return this.descrizione;
    }
    
    public void setDescrizione(String descrizione) {
        this.descrizione = descrizione;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="evento")
    public Set<AppelloEsame> getAppelloEsames() {
        return this.appelloEsames;
    }
    
    public void setAppelloEsames(Set<AppelloEsame> appelloEsames) {
        this.appelloEsames = appelloEsames;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="evento")
    public Set<Lezione> getLeziones() {
        return this.leziones;
    }
    
    public void setLeziones(Set<Lezione> leziones) {
        this.leziones = leziones;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="studente_has_evento", catalog="mydb", joinColumns = { 
        @JoinColumn(name="evento_idevento", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="studente_idstudente", nullable=false, updatable=false) })
    public Set<Studente> getStudentes() {
        return this.studentes;
    }
    
    public void setStudentes(Set<Studente> studentes) {
        this.studentes = studentes;
    }




}


